# 分库、分表
spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db0?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
        username: test
        password: test
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/db1?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
        username: test
        password: test
    sharding:
      # 默认数据源，不涉及分表的表会使用这个数据源
      default-data-source-name: ds0
      tables:
        temp_order:
          # 分表策略
          actual-data-nodes: ds$->{0..1}.temp_order_$->{0..2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: temp_order_$->{id % 3}
          # 分库策略
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id % 2}

    # 开启sql显示
    props:
      sql:
        show: on